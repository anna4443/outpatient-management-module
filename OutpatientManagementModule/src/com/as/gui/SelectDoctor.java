package com.as.gui;

import com.as.bl.DoctorsHandler;
import com.as.main.BaseForm;
import com.as.model.Doctor;
import com.as.model.Patient;

import javax.print.Doc;
import javax.swing.*;
import java.awt.*;
import java.util.List;

public class SelectDoctor extends BaseForm {
    //Koristimo ComboBox kojemu zadamo da radi s klasom Doctor
    private JComboBox<Doctor> cbDoctors;
    private JButton btnSelect;
    private JPanel contentPane;
    private List<Doctor> doctors;

    private static final DoctorsHandler DH = new DoctorsHandler();

    public SelectDoctor() throws HeadlessException {
        super("Select doctors", 789, 234);
        setContentPane(contentPane);

        doctors = DH.getDoctors();

        //Popunjavamo ComboBox s Doctor objektima iz baze
        //konstruktor očekuje Doctor[] tak da moramo List pretvoriti
        //u [], a s obzirom da Genericsi nestanu nakon compiliranja, moramo
        //mu reći s kojim tipom radi tak da mu proslijedimo prazno polje tipa Doctor
        cbDoctors.setModel(new DefaultComboBoxModel<>(doctors.toArray(new Doctor[0])));
        //cbDoctors.setModel(new DefaultComboBoxModel(doctors.stream().map(d -> d.getName()).toArray(/*String[]::new */)));

        btnSelect.addActionListener(e -> {
//            int index = cbDoctors.getSelectedIndex();
//            Doctor selectedDoctor = doctors.get(index);
            Doctor selectedDoctor = (Doctor) cbDoctors.getSelectedItem();

            List<Patient> doctorsPatients = DH.getPatientsForDoctor(selectedDoctor.getId());

            if (doctorsPatients.size() == 0)
                JOptionPane.showMessageDialog(this, "No patients, so sry...");
            else {
//                DoctorManagement dm = new DoctorManagement(selectedDoctor, doctorsPatients);
//                dm.setVisible(true);
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        cbDoctors = new JComboBox();
        contentPane.add(cbDoctors, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnSelect = new JButton();
        btnSelect.setText("Select");
        contentPane.add(btnSelect, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
