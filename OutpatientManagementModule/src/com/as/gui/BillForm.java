package com.as.gui;

import com.as.bl.PatientsHandler;
import com.as.main.BaseForm;
import com.as.model.Bill;
import com.as.model.Patient;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Map;

public class BillForm extends BaseForm {
    private JComboBox cbPaymentType;
    private JTextField txtAmount;
    private JFormattedTextField txtDateIssuing;
    private JPanel content;
    private JButton addButton;
    private JComboBox<Patient> cbPatient;

    private List<Patient> p;

    private static final PatientsHandler PH = new PatientsHandler();

    public BillForm() throws HeadlessException {
        super("Add bills", 600, 400);

        setContentPane(content);

        p = PH.getPatients();

        cbPatient.setModel(new DefaultComboBoxModel<>(p.toArray(new Patient[0])));

        cbPaymentType.setModel(new DefaultComboBoxModel(PH.getPaymentType().values().toArray()));
        addButton.addActionListener(e -> {
            try {
                DateFormat format = new SimpleDateFormat("dd.MM.yyyy.");

                Bill b = new Bill();

                String selectedPaymentType = (String) cbPaymentType.getSelectedItem();
                Integer paymentTypeID = null;
                Map<Integer, String> paymentTypeList = PH.getPaymentType();
                for (Integer key : paymentTypeList.keySet()) {
                    String value = paymentTypeList.get(key);
                    if (selectedPaymentType.equals(value)) {
                        paymentTypeID = key;
                        break;
                    }
                }
                b.setPaymentTypeID(paymentTypeID);

                Patient p = (Patient) cbPatient.getSelectedItem();

                b.setPatientId(p.getId());
                b.setAmount(Double.valueOf(txtAmount.getText()));
                b.setDateIssuing(format.parse(txtDateIssuing.getText()));

                PH.insertBill(b);


                JOptionPane.showMessageDialog(this, "Bill inserted successfully!!");
            } catch (Exception ex) {
                ex.printStackTrace();

                JOptionPane.showMessageDialog(this, "Bill failed!!");
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        content = new JPanel();
        content.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Payment type:");
        content.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cbPaymentType = new JComboBox();
        content.add(cbPaymentType, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(200, -1), null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Amount:");
        content.add(label2, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        txtAmount = new JTextField();
        content.add(txtAmount, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(200, -1), new Dimension(150, -1), null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Date issuing:");
        content.add(label3, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        txtDateIssuing = new JFormattedTextField();
        content.add(txtDateIssuing, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(200, -1), new Dimension(150, -1), null, 0, false));
        addButton = new JButton();
        addButton.setText("Add");
        content.add(addButton, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(200, -1), null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Patient:");
        content.add(label4, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cbPatient = new JComboBox();
        content.add(cbPatient, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(200, -1), null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return content;
    }
}
